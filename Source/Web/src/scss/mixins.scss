/* STARTSTUDIO MIXINS
---------------------------------------- */
@import 'breakpoints';
@import 'functions';


/* App-specific Typography*/
@mixin sans {
  font-family: 'Roboto', 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

@mixin thin { font-weight: 100; }
@mixin light { font-weight: 300; }
@mixin regular { font-weight: 400; }
@mixin medium { font-weight: 500; }
@mixin bold { font-weight: 700; }
@mixin black { font-weight: 900; }


// non-standardized styling of placeholder text
@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }
  @include optional-at-root(':-moz-placeholder') {
    @content;
  }
  @include optional-at-root('::-moz-placeholder') {
    @content;
  }
  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }
}


/* Responsive Typography */
@mixin font-range($min-size, $max-size, $min-width: 320, $max-width: 1440) {
    $min-size-rem: rem-calc($min-size);
    $max-size-rem: rem-calc($max-size);
    $min-width-rem: rem-calc($min-width);
    $max-width-rem: rem-calc($max-width);

    font-size: calc(#{$min-size-rem} + (#{$max-size} - #{$min-size}) * (100vw - #{$min-width-rem}) / (#{$max-width} - #{$min-width}));

    @include breakpoint($min-width down) {
        font-size: #{$min-size-rem};
    }
    @include breakpoint($max-width) {
        font-size: #{$max-size-rem};
    }
}

@mixin size-range($property, $min-size, $max-size, $min-width: 320, $max-width: 1440) {
    $min-size-rem: rem-calc($min-size);
    $max-size-rem: rem-calc($max-size);
    $min-width-rem: rem-calc($min-width);
    $max-width-rem: rem-calc($max-width);

    #{$property}: calc(#{$min-size-rem} + (#{$max-size} - #{$min-size}) * (100vw - #{$min-width-rem}) / (#{$max-width} - #{$min-width}));

    @include breakpoint($min-width down) {
        #{$property}: #{$min-size-rem};
    }
    @include breakpoint($max-width) {
        #{$property}: #{$max-size-rem};
    }
}

/* "Responsive" background images */
/* Takes in path to the image, and the image extension separately */
@mixin responsive-background($path, $ext) {
    $at1x_path: "#{$path}.#{$ext}";
    $at2x_path: "#{$path}@2x.#{$ext}";
    $at3x_path: "#{$path}@3x.#{$ext}";

    background-image: url("#{$at1x_path}");

    @media screen and (-webkit-min-device-pixel-ratio : 2),
    screen and (-webkit-min-device-pixel-ratio: 2),
    screen and (min-resolution: 2dppx),
    screen and (min-resolution: 192dpi) {
        background-image: url("#{$at2x_path}");
    }

    @media screen and (-webkit-min-device-pixel-ratio : 3),
    screen and (-webkit-min-device-pixel-ratio: 3),
    screen and (min-resolution: 3dppx),
    screen and (min-resolution: 288dpi) {
        background-image: url("#{$at3x_path}");
    }
}

/* Transitions */
@mixin transition ($property: all, $duration: .3s, $timing-function: ease) {
    transition: $property $duration $timing-function;
}

@mixin no-transition { transition: none; }

/* Columns */
@mixin columns($column-count: 3, $column-gap: 20px) {
    -moz-column-count: $column-count;
         column-count: $column-count;
    -moz-column-gap: $column-gap;
         column-gap: $column-gap;
}

/* Box Shadows */
@mixin shadow { box-shadow: 0 2px 4px rgba(0,0,0,.4); }

@mixin no-shadow { box-shadow: 0 0 0 transparent; }

/* Clearing */
@mixin clear {
    clear: both;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0;
}

@mixin clearfix {
    &:before, &:after {
        content: '\0020';
        display: block;
        overflow: hidden;
        visibility: hidden;
        width: 0;
        height: 0;
        zoom: 1;
    }
    &:after {
        clear: both;
    }
}

/* Restore default ul styling */
@mixin disc {
    list-style: disc outside;
    margin-left: 20px;
}

/* Style certain form controls to look like text inputs */
@mixin likeInput($bgImg) {
  border: 1px solid $borderDk;
  height: rem-calc(48);
  padding: 0 rem-calc(48) 0 rem-calc(16);
  display: flex;
  align-items: center;
  border-radius: rem-calc(4);
  //TODO: Color should change to grayDk when an option is selected
  color: $gray;
  background: white url("../assets/img/#{$bgImg}.svg") no-repeat right;
  padding-right: rem-calc(48);
  cursor: pointer;
}

/* placeholder styling */
@mixin placeholderColor($color: $gray) {
  /* Chrome/Opera/Safari */
  &::-webkit-input-placeholder { color: $color; }
  /* Firefox 19+ */
  &::-moz-placeholder { color: $color; }
  /* IE 10+ */
  &:-ms-input-placeholder { color: $color; }
  /* Firefox 18- */
  &:-moz-placeholder { color: $color; }
}

/* grid */
@mixin grid {
    display: -ms-grid;
    display: grid;
}

@mixin gridCols($columns) {
    -ms-grid-columns: $columns;
    grid-template-columns: $columns;
}

/* grid rows do not have to be explicitly set */
@mixin gridRows($rows) {
    -ms-grid-rows: $rows;
    grid-template-rows: $rows;
}

/* Explicit placement required for IE */
@mixin gridPlace($col, $row) {
  -ms-grid-column: $col;
  -ms-grid-row: $row;
}

@mixin gridColSpan($span) {
  -ms-grid-column-span: $span;
  grid-column: span $span;
}

@mixin gridRowSpan($span) {
  -ms-grid-row-span: $span;
  grid-row: span $span;
}
